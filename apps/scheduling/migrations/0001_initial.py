# Generated by Django 4.2.24 on 2025-09-10 14:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("whatsapp", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MessageTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Template name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("location", "Location"),
                            ("contact", "Contact"),
                            ("menu", "Menu"),
                            ("poll", "Poll"),
                            ("list", "List"),
                        ],
                        max_length=20,
                        verbose_name="Template type",
                    ),
                ),
                ("content", models.TextField(verbose_name="Content")),
                ("media_url", models.URLField(blank=True, verbose_name="Media URL")),
                (
                    "media_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Media type"
                    ),
                ),
                (
                    "menu_options",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Menu options"
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Location name"
                    ),
                ),
                (
                    "location_address",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Location address"
                    ),
                ),
                (
                    "location_latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=10,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "location_longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=10,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Contact name"
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Contact phone"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Contact email"
                    ),
                ),
                (
                    "contact_organization",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Contact organization"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(default=0, verbose_name="Usage count"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message_templates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message Template",
                "verbose_name_plural": "Message Templates",
                "unique_together": {("user", "name")},
            },
        ),
        migrations.CreateModel(
            name="ScheduledMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Campaign name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("message_content", models.TextField(verbose_name="Message content")),
                (
                    "recipient_type",
                    models.CharField(
                        choices=[
                            ("groups", "Groups"),
                            ("contacts", "Contacts"),
                            ("mixed", "Mixed"),
                        ],
                        max_length=10,
                        verbose_name="Recipient type",
                    ),
                ),
                ("schedule_date", models.DateField(verbose_name="Schedule date")),
                ("schedule_time", models.TimeField(verbose_name="Schedule time")),
                (
                    "timezone",
                    models.CharField(
                        default="America/Fortaleza",
                        max_length=50,
                        verbose_name="Timezone",
                    ),
                ),
                (
                    "delay_min",
                    models.PositiveIntegerField(
                        default=3,
                        help_text="Minimum delay between messages in seconds",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Minimum delay (seconds)",
                    ),
                ),
                (
                    "delay_max",
                    models.PositiveIntegerField(
                        default=6,
                        help_text="Maximum delay between messages in seconds",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Maximum delay (seconds)",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("scheduled", "Scheduled"),
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "total_recipients",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Total recipients"
                    ),
                ),
                (
                    "messages_sent",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages sent"
                    ),
                ),
                (
                    "messages_failed",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages failed"
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Task ID"
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Scheduled at"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Started at"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Completed at"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error message"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "contacts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="scheduled_messages",
                        to="whatsapp.whatsappcontact",
                        verbose_name="Contacts",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="scheduled_messages",
                        to="whatsapp.whatsappgroup",
                        verbose_name="Groups",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scheduled_messages",
                        to="scheduling.messagetemplate",
                        verbose_name="Template",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "whatsapp_instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_messages",
                        to="whatsapp.whatsappinstance",
                        verbose_name="WhatsApp Instance",
                    ),
                ),
            ],
            options={
                "verbose_name": "Scheduled Message",
                "verbose_name_plural": "Scheduled Messages",
                "ordering": ["-schedule_date", "-schedule_time"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalScheduledMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Campaign name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("message_content", models.TextField(verbose_name="Message content")),
                (
                    "recipient_type",
                    models.CharField(
                        choices=[
                            ("groups", "Groups"),
                            ("contacts", "Contacts"),
                            ("mixed", "Mixed"),
                        ],
                        max_length=10,
                        verbose_name="Recipient type",
                    ),
                ),
                ("schedule_date", models.DateField(verbose_name="Schedule date")),
                ("schedule_time", models.TimeField(verbose_name="Schedule time")),
                (
                    "timezone",
                    models.CharField(
                        default="America/Fortaleza",
                        max_length=50,
                        verbose_name="Timezone",
                    ),
                ),
                (
                    "delay_min",
                    models.PositiveIntegerField(
                        default=3,
                        help_text="Minimum delay between messages in seconds",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Minimum delay (seconds)",
                    ),
                ),
                (
                    "delay_max",
                    models.PositiveIntegerField(
                        default=6,
                        help_text="Maximum delay between messages in seconds",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Maximum delay (seconds)",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("scheduled", "Scheduled"),
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "total_recipients",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Total recipients"
                    ),
                ),
                (
                    "messages_sent",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages sent"
                    ),
                ),
                (
                    "messages_failed",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages failed"
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Task ID"
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Scheduled at"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Started at"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Completed at"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error message"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="scheduling.messagetemplate",
                        verbose_name="Template",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "whatsapp_instance",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="whatsapp.whatsappinstance",
                        verbose_name="WhatsApp Instance",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Scheduled Message",
                "verbose_name_plural": "historical Scheduled Messages",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalQuickReply",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "usage_count",
                    models.PositiveIntegerField(default=0, verbose_name="Usage count"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Quick Reply",
                "verbose_name_plural": "historical Quick Replies",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMessageTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Template name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("location", "Location"),
                            ("contact", "Contact"),
                            ("menu", "Menu"),
                            ("poll", "Poll"),
                            ("list", "List"),
                        ],
                        max_length=20,
                        verbose_name="Template type",
                    ),
                ),
                ("content", models.TextField(verbose_name="Content")),
                ("media_url", models.URLField(blank=True, verbose_name="Media URL")),
                (
                    "media_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Media type"
                    ),
                ),
                (
                    "menu_options",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Menu options"
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Location name"
                    ),
                ),
                (
                    "location_address",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Location address"
                    ),
                ),
                (
                    "location_latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=10,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "location_longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=10,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Contact name"
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Contact phone"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Contact email"
                    ),
                ),
                (
                    "contact_organization",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Contact organization"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(default=0, verbose_name="Usage count"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Message Template",
                "verbose_name_plural": "historical Message Templates",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMessageDelivery",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "recipient_type",
                    models.CharField(
                        choices=[("group", "Group"), ("contact", "Contact")],
                        max_length=10,
                        verbose_name="Recipient type",
                    ),
                ),
                (
                    "recipient_id",
                    models.CharField(max_length=255, verbose_name="Recipient ID"),
                ),
                (
                    "recipient_name",
                    models.CharField(max_length=200, verbose_name="Recipient name"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Phone number"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "whatsapp_message_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="WhatsApp Message ID"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Sent at"),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Delivered at"
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Read at"),
                ),
                (
                    "failed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Failed at"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error message"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "scheduled_message",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="scheduling.scheduledmessage",
                        verbose_name="Scheduled Message",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Message Delivery",
                "verbose_name_plural": "historical Message Deliveries",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="QuickReply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "usage_count",
                    models.PositiveIntegerField(default=0, verbose_name="Usage count"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quick_replies",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quick Reply",
                "verbose_name_plural": "Quick Replies",
                "unique_together": {("user", "title")},
            },
        ),
        migrations.CreateModel(
            name="MessageDelivery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "recipient_type",
                    models.CharField(
                        choices=[("group", "Group"), ("contact", "Contact")],
                        max_length=10,
                        verbose_name="Recipient type",
                    ),
                ),
                (
                    "recipient_id",
                    models.CharField(max_length=255, verbose_name="Recipient ID"),
                ),
                (
                    "recipient_name",
                    models.CharField(max_length=200, verbose_name="Recipient name"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Phone number"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "whatsapp_message_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="WhatsApp Message ID"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Sent at"),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Delivered at"
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Read at"),
                ),
                (
                    "failed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Failed at"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error message"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "scheduled_message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="scheduling.scheduledmessage",
                        verbose_name="Scheduled Message",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message Delivery",
                "verbose_name_plural": "Message Deliveries",
                "unique_together": {
                    ("scheduled_message", "recipient_type", "recipient_id")
                },
            },
        ),
    ]
