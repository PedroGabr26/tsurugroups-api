# Generated by Django 4.2.24 on 2025-09-10 01:21

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Plan name")),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic"),
                            ("premium", "Premium"),
                            ("enterprise", "Enterprise"),
                        ],
                        max_length=20,
                        verbose_name="Plan type",
                    ),
                ),
                (
                    "billing_cycle",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        max_length=20,
                        verbose_name="Billing cycle",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Price",
                    ),
                ),
                (
                    "max_whatsapp_instances",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max WhatsApp instances",
                    ),
                ),
                (
                    "max_scheduled_messages_per_month",
                    models.PositiveIntegerField(
                        default=100,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max scheduled messages per month",
                    ),
                ),
                (
                    "max_groups_per_instance",
                    models.PositiveIntegerField(
                        default=10,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max groups per instance",
                    ),
                ),
                (
                    "max_contacts_per_instance",
                    models.PositiveIntegerField(
                        default=1000,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max contacts per instance",
                    ),
                ),
                (
                    "max_templates",
                    models.PositiveIntegerField(
                        default=10,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max templates",
                    ),
                ),
                (
                    "has_api_access",
                    models.BooleanField(default=False, verbose_name="Has API access"),
                ),
                (
                    "has_webhook_support",
                    models.BooleanField(
                        default=False, verbose_name="Has webhook support"
                    ),
                ),
                (
                    "has_advanced_scheduling",
                    models.BooleanField(
                        default=False, verbose_name="Has advanced scheduling"
                    ),
                ),
                (
                    "has_analytics",
                    models.BooleanField(default=False, verbose_name="Has analytics"),
                ),
                (
                    "has_priority_support",
                    models.BooleanField(
                        default=False, verbose_name="Has priority support"
                    ),
                ),
                (
                    "stripe_price_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Stripe Price ID"
                    ),
                ),
                (
                    "stripe_product_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Stripe Product ID"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Is featured"),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort order"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
            ],
            options={
                "verbose_name": "Plan",
                "verbose_name_plural": "Plans",
                "ordering": ["sort_order", "price"],
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("trialing", "Trialing"),
                            ("past_due", "Past Due"),
                            ("canceled", "Canceled"),
                            ("unpaid", "Unpaid"),
                            ("incomplete", "Incomplete"),
                            ("incomplete_expired", "Incomplete Expired"),
                        ],
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        verbose_name="Stripe Subscription ID",
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(max_length=255, verbose_name="Stripe Customer ID"),
                ),
                (
                    "current_period_start",
                    models.DateTimeField(verbose_name="Current period start"),
                ),
                (
                    "current_period_end",
                    models.DateTimeField(verbose_name="Current period end"),
                ),
                (
                    "trial_start",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Trial start"
                    ),
                ),
                (
                    "trial_end",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Trial end"
                    ),
                ),
                (
                    "cancel_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Cancel at"
                    ),
                ),
                (
                    "canceled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Canceled at"
                    ),
                ),
                (
                    "messages_sent_this_month",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages sent this month"
                    ),
                ),
                (
                    "last_usage_reset",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last usage reset"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="subscriptions",
                        to="subscriptions.plan",
                        verbose_name="Plan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription",
                "verbose_name_plural": "Subscriptions",
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Invoice number"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("open", "Open"),
                            ("paid", "Paid"),
                            ("uncollectible", "Uncollectible"),
                            ("void", "Void"),
                        ],
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "amount_due",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Amount due"
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Amount paid",
                    ),
                ),
                (
                    "amount_remaining",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Amount remaining",
                    ),
                ),
                (
                    "stripe_invoice_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Stripe Invoice ID"
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Stripe Payment Intent ID",
                    ),
                ),
                ("invoice_date", models.DateTimeField(verbose_name="Invoice date")),
                ("due_date", models.DateTimeField(verbose_name="Due date")),
                (
                    "paid_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Paid at"),
                ),
                ("period_start", models.DateTimeField(verbose_name="Period start")),
                ("period_end", models.DateTimeField(verbose_name="Period end")),
                (
                    "invoice_pdf_url",
                    models.URLField(blank=True, verbose_name="Invoice PDF URL"),
                ),
                (
                    "hosted_invoice_url",
                    models.URLField(blank=True, verbose_name="Hosted invoice URL"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="subscriptions.subscription",
                        verbose_name="Subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "ordering": ["-invoice_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalSubscription",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("trialing", "Trialing"),
                            ("past_due", "Past Due"),
                            ("canceled", "Canceled"),
                            ("unpaid", "Unpaid"),
                            ("incomplete", "Incomplete"),
                            ("incomplete_expired", "Incomplete Expired"),
                        ],
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        verbose_name="Stripe Subscription ID",
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(max_length=255, verbose_name="Stripe Customer ID"),
                ),
                (
                    "current_period_start",
                    models.DateTimeField(verbose_name="Current period start"),
                ),
                (
                    "current_period_end",
                    models.DateTimeField(verbose_name="Current period end"),
                ),
                (
                    "trial_start",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Trial start"
                    ),
                ),
                (
                    "trial_end",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Trial end"
                    ),
                ),
                (
                    "cancel_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Cancel at"
                    ),
                ),
                (
                    "canceled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Canceled at"
                    ),
                ),
                (
                    "messages_sent_this_month",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages sent this month"
                    ),
                ),
                (
                    "last_usage_reset",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last usage reset"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="subscriptions.plan",
                        verbose_name="Plan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Subscription",
                "verbose_name_plural": "historical Subscriptions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Plan name")),
                ("slug", models.SlugField(verbose_name="Slug")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic"),
                            ("premium", "Premium"),
                            ("enterprise", "Enterprise"),
                        ],
                        max_length=20,
                        verbose_name="Plan type",
                    ),
                ),
                (
                    "billing_cycle",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        max_length=20,
                        verbose_name="Billing cycle",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Price",
                    ),
                ),
                (
                    "max_whatsapp_instances",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max WhatsApp instances",
                    ),
                ),
                (
                    "max_scheduled_messages_per_month",
                    models.PositiveIntegerField(
                        default=100,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max scheduled messages per month",
                    ),
                ),
                (
                    "max_groups_per_instance",
                    models.PositiveIntegerField(
                        default=10,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max groups per instance",
                    ),
                ),
                (
                    "max_contacts_per_instance",
                    models.PositiveIntegerField(
                        default=1000,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max contacts per instance",
                    ),
                ),
                (
                    "max_templates",
                    models.PositiveIntegerField(
                        default=10,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Max templates",
                    ),
                ),
                (
                    "has_api_access",
                    models.BooleanField(default=False, verbose_name="Has API access"),
                ),
                (
                    "has_webhook_support",
                    models.BooleanField(
                        default=False, verbose_name="Has webhook support"
                    ),
                ),
                (
                    "has_advanced_scheduling",
                    models.BooleanField(
                        default=False, verbose_name="Has advanced scheduling"
                    ),
                ),
                (
                    "has_analytics",
                    models.BooleanField(default=False, verbose_name="Has analytics"),
                ),
                (
                    "has_priority_support",
                    models.BooleanField(
                        default=False, verbose_name="Has priority support"
                    ),
                ),
                (
                    "stripe_price_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Stripe Price ID"
                    ),
                ),
                (
                    "stripe_product_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Stripe Product ID"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Is featured"),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort order"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Plan",
                "verbose_name_plural": "historical Plans",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoice",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="Invoice number"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("open", "Open"),
                            ("paid", "Paid"),
                            ("uncollectible", "Uncollectible"),
                            ("void", "Void"),
                        ],
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "amount_due",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Amount due"
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Amount paid",
                    ),
                ),
                (
                    "amount_remaining",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Amount remaining",
                    ),
                ),
                (
                    "stripe_invoice_id",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="Stripe Invoice ID"
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Stripe Payment Intent ID",
                    ),
                ),
                ("invoice_date", models.DateTimeField(verbose_name="Invoice date")),
                ("due_date", models.DateTimeField(verbose_name="Due date")),
                (
                    "paid_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Paid at"),
                ),
                ("period_start", models.DateTimeField(verbose_name="Period start")),
                ("period_end", models.DateTimeField(verbose_name="Period end")),
                (
                    "invoice_pdf_url",
                    models.URLField(blank=True, verbose_name="Invoice PDF URL"),
                ),
                (
                    "hosted_invoice_url",
                    models.URLField(blank=True, verbose_name="Hosted invoice URL"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="subscriptions.subscription",
                        verbose_name="Subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Invoice",
                "verbose_name_plural": "historical Invoices",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="UsageLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "limit_type",
                    models.CharField(
                        choices=[
                            ("messages", "Messages"),
                            ("instances", "WhatsApp Instances"),
                            ("groups", "Groups"),
                            ("contacts", "Contacts"),
                            ("templates", "Templates"),
                        ],
                        max_length=20,
                        verbose_name="Limit type",
                    ),
                ),
                (
                    "limit_value",
                    models.PositiveIntegerField(verbose_name="Limit value"),
                ),
                (
                    "current_usage",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Current usage"
                    ),
                ),
                (
                    "reset_period",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("yearly", "Yearly"),
                            ("never", "Never"),
                        ],
                        default="monthly",
                        max_length=20,
                        verbose_name="Reset period",
                    ),
                ),
                (
                    "last_reset",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last reset"
                    ),
                ),
                (
                    "next_reset",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Next reset"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_limits",
                        to="subscriptions.subscription",
                        verbose_name="Subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usage Limit",
                "verbose_name_plural": "Usage Limits",
                "unique_together": {("subscription", "limit_type")},
            },
        ),
    ]
