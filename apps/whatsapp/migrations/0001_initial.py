# Generated by Django 4.2.24 on 2025-09-10 14:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="WhatsAppGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group_id", models.CharField(max_length=255, verbose_name="Group ID")),
                ("name", models.CharField(max_length=200, verbose_name="Group name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "participant_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Participant count"
                    ),
                ),
                (
                    "is_admin",
                    models.BooleanField(default=False, verbose_name="Is admin"),
                ),
                (
                    "owner_jid",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Owner JID"
                    ),
                ),
                (
                    "owner_phone_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Owner phone number"
                    ),
                ),
                (
                    "is_locked",
                    models.BooleanField(default=False, verbose_name="Is locked"),
                ),
                (
                    "is_announce",
                    models.BooleanField(default=False, verbose_name="Is announce only"),
                ),
                (
                    "is_ephemeral",
                    models.BooleanField(default=False, verbose_name="Is ephemeral"),
                ),
                (
                    "disappearing_timer",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Disappearing timer"
                    ),
                ),
                (
                    "is_join_approval_required",
                    models.BooleanField(
                        default=False, verbose_name="Join approval required"
                    ),
                ),
                (
                    "group_created",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Group created"
                    ),
                ),
                (
                    "creator_country_code",
                    models.CharField(
                        blank=True, max_length=5, verbose_name="Creator country code"
                    ),
                ),
                (
                    "announce_version_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Announce version ID"
                    ),
                ),
                (
                    "participant_version_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Participant version ID",
                    ),
                ),
                (
                    "invite_link",
                    models.URLField(blank=True, verbose_name="Invite link"),
                ),
                (
                    "member_add_mode",
                    models.CharField(
                        default="all_member_add",
                        max_length=50,
                        verbose_name="Member add mode",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "last_synced_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last synced at"
                    ),
                ),
            ],
            options={
                "verbose_name": "WhatsApp Group",
                "verbose_name_plural": "WhatsApp Groups",
            },
        ),
        migrations.CreateModel(
            name="WhatsAppInstance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Instance name"),
                ),
                (
                    "system_name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="System name"
                    ),
                ),
                (
                    "whatsapp_number",
                    models.CharField(
                        blank=True,
                        help_text="Number to be connected to WhatsApp (with country code)",
                        max_length=20,
                        null=True,
                        verbose_name="WhatsApp number",
                    ),
                ),
                (
                    "gateway_url",
                    models.URLField(blank=True, verbose_name="Gateway URL"),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="API Key"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("disconnected", "Disconnected"),
                            ("connecting", "Connecting"),
                            ("connected", "Connected"),
                            ("error", "Error"),
                            ("qr_code", "QR Code Required"),
                            ("pairing_code", "Pairing Code Required"),
                        ],
                        default="disconnected",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Connected WhatsApp number",
                        max_length=20,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "connection_method",
                    models.CharField(
                        choices=[
                            ("qr_code", "QR Code"),
                            ("pairing_code", "Pairing Code"),
                        ],
                        default="qr_code",
                        help_text="Method used to connect WhatsApp",
                        max_length=20,
                        verbose_name="Connection method",
                    ),
                ),
                ("qr_code", models.TextField(blank=True, verbose_name="QR Code")),
                (
                    "qr_code_expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="QR Code expires at"
                    ),
                ),
                (
                    "pairing_code",
                    models.CharField(
                        blank=True,
                        help_text="Code received on WhatsApp for pairing",
                        max_length=10,
                        verbose_name="Pairing code",
                    ),
                ),
                (
                    "last_connected_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last connected at"
                    ),
                ),
                (
                    "last_disconnected_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last disconnected at"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "webhook_url",
                    models.URLField(blank=True, verbose_name="Webhook URL"),
                ),
                (
                    "messages_sent",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages sent"
                    ),
                ),
                (
                    "messages_received",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages received"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whatsapp_instance",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "WhatsApp Instance",
                "verbose_name_plural": "WhatsApp Instances",
            },
        ),
        migrations.CreateModel(
            name="WhatsAppMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Message ID"
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("sticker", "Sticker"),
                            ("location", "Location"),
                            ("contact", "Contact"),
                            ("menu", "Menu"),
                            ("poll", "Poll"),
                            ("list", "List"),
                        ],
                        max_length=20,
                        verbose_name="Message type",
                    ),
                ),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "direction",
                    models.CharField(
                        choices=[("inbound", "Inbound"), ("outbound", "Outbound")],
                        max_length=10,
                        verbose_name="Direction",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="Phone number"),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Contact name"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("media_url", models.URLField(blank=True, verbose_name="Media URL")),
                (
                    "media_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Media type"
                    ),
                ),
                (
                    "media_size",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Media size"
                    ),
                ),
                ("sent_at", models.DateTimeField(verbose_name="Sent at")),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Delivered at"
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Read at"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="messages",
                        to="whatsapp.whatsappgroup",
                        verbose_name="Group",
                    ),
                ),
                (
                    "whatsapp_instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="whatsapp.whatsappinstance",
                        verbose_name="WhatsApp Instance",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="whatsappgroup",
            name="whatsapp_instance",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="groups",
                to="whatsapp.whatsappinstance",
                verbose_name="WhatsApp Instance",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalWhatsAppInstance",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Instance name"),
                ),
                (
                    "system_name",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="System name"
                    ),
                ),
                (
                    "whatsapp_number",
                    models.CharField(
                        blank=True,
                        help_text="Number to be connected to WhatsApp (with country code)",
                        max_length=20,
                        null=True,
                        verbose_name="WhatsApp number",
                    ),
                ),
                (
                    "gateway_url",
                    models.URLField(blank=True, verbose_name="Gateway URL"),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="API Key"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("disconnected", "Disconnected"),
                            ("connecting", "Connecting"),
                            ("connected", "Connected"),
                            ("error", "Error"),
                            ("qr_code", "QR Code Required"),
                            ("pairing_code", "Pairing Code Required"),
                        ],
                        default="disconnected",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Connected WhatsApp number",
                        max_length=20,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "connection_method",
                    models.CharField(
                        choices=[
                            ("qr_code", "QR Code"),
                            ("pairing_code", "Pairing Code"),
                        ],
                        default="qr_code",
                        help_text="Method used to connect WhatsApp",
                        max_length=20,
                        verbose_name="Connection method",
                    ),
                ),
                ("qr_code", models.TextField(blank=True, verbose_name="QR Code")),
                (
                    "qr_code_expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="QR Code expires at"
                    ),
                ),
                (
                    "pairing_code",
                    models.CharField(
                        blank=True,
                        help_text="Code received on WhatsApp for pairing",
                        max_length=10,
                        verbose_name="Pairing code",
                    ),
                ),
                (
                    "last_connected_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last connected at"
                    ),
                ),
                (
                    "last_disconnected_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last disconnected at"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "webhook_url",
                    models.URLField(blank=True, verbose_name="Webhook URL"),
                ),
                (
                    "messages_sent",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages sent"
                    ),
                ),
                (
                    "messages_received",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Messages received"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical WhatsApp Instance",
                "verbose_name_plural": "historical WhatsApp Instances",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWhatsAppGroupParticipant",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("jid", models.CharField(max_length=255, verbose_name="JID")),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Phone number"
                    ),
                ),
                (
                    "lid",
                    models.CharField(blank=True, max_length=100, verbose_name="LID"),
                ),
                (
                    "display_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Display name"
                    ),
                ),
                (
                    "is_admin",
                    models.BooleanField(default=False, verbose_name="Is admin"),
                ),
                (
                    "is_super_admin",
                    models.BooleanField(default=False, verbose_name="Is super admin"),
                ),
                (
                    "error_code",
                    models.PositiveIntegerField(default=0, verbose_name="Error code"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="whatsapp.whatsappgroup",
                        verbose_name="Group",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical WhatsApp Group Participant",
                "verbose_name_plural": "historical WhatsApp Group Participants",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWhatsAppGroup",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("group_id", models.CharField(max_length=255, verbose_name="Group ID")),
                ("name", models.CharField(max_length=200, verbose_name="Group name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "participant_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Participant count"
                    ),
                ),
                (
                    "is_admin",
                    models.BooleanField(default=False, verbose_name="Is admin"),
                ),
                (
                    "owner_jid",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Owner JID"
                    ),
                ),
                (
                    "owner_phone_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Owner phone number"
                    ),
                ),
                (
                    "is_locked",
                    models.BooleanField(default=False, verbose_name="Is locked"),
                ),
                (
                    "is_announce",
                    models.BooleanField(default=False, verbose_name="Is announce only"),
                ),
                (
                    "is_ephemeral",
                    models.BooleanField(default=False, verbose_name="Is ephemeral"),
                ),
                (
                    "disappearing_timer",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Disappearing timer"
                    ),
                ),
                (
                    "is_join_approval_required",
                    models.BooleanField(
                        default=False, verbose_name="Join approval required"
                    ),
                ),
                (
                    "group_created",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Group created"
                    ),
                ),
                (
                    "creator_country_code",
                    models.CharField(
                        blank=True, max_length=5, verbose_name="Creator country code"
                    ),
                ),
                (
                    "announce_version_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Announce version ID"
                    ),
                ),
                (
                    "participant_version_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Participant version ID",
                    ),
                ),
                (
                    "invite_link",
                    models.URLField(blank=True, verbose_name="Invite link"),
                ),
                (
                    "member_add_mode",
                    models.CharField(
                        default="all_member_add",
                        max_length=50,
                        verbose_name="Member add mode",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                (
                    "last_synced_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last synced at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "whatsapp_instance",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="whatsapp.whatsappinstance",
                        verbose_name="WhatsApp Instance",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical WhatsApp Group",
                "verbose_name_plural": "historical WhatsApp Groups",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWhatsAppContact",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="Phone number"),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=200, verbose_name="Name"),
                ),
                (
                    "is_business",
                    models.BooleanField(default=False, verbose_name="Is business"),
                ),
                (
                    "profile_picture_url",
                    models.URLField(blank=True, verbose_name="Profile picture URL"),
                ),
                (
                    "is_blocked",
                    models.BooleanField(default=False, verbose_name="Is blocked"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Updated at"
                    ),
                ),
                (
                    "last_seen_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last seen at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "whatsapp_instance",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="whatsapp.whatsappinstance",
                        verbose_name="WhatsApp Instance",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical WhatsApp Contact",
                "verbose_name_plural": "historical WhatsApp Contacts",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="WhatsAppGroupParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("jid", models.CharField(max_length=255, verbose_name="JID")),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Phone number"
                    ),
                ),
                (
                    "lid",
                    models.CharField(blank=True, max_length=100, verbose_name="LID"),
                ),
                (
                    "display_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Display name"
                    ),
                ),
                (
                    "is_admin",
                    models.BooleanField(default=False, verbose_name="Is admin"),
                ),
                (
                    "is_super_admin",
                    models.BooleanField(default=False, verbose_name="Is super admin"),
                ),
                (
                    "error_code",
                    models.PositiveIntegerField(default=0, verbose_name="Error code"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="whatsapp.whatsappgroup",
                        verbose_name="Group",
                    ),
                ),
            ],
            options={
                "verbose_name": "WhatsApp Group Participant",
                "verbose_name_plural": "WhatsApp Group Participants",
                "unique_together": {("group", "jid")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="whatsappgroup",
            unique_together={("whatsapp_instance", "group_id")},
        ),
        migrations.CreateModel(
            name="WhatsAppContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="Phone number"),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=200, verbose_name="Name"),
                ),
                (
                    "is_business",
                    models.BooleanField(default=False, verbose_name="Is business"),
                ),
                (
                    "profile_picture_url",
                    models.URLField(blank=True, verbose_name="Profile picture URL"),
                ),
                (
                    "is_blocked",
                    models.BooleanField(default=False, verbose_name="Is blocked"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "last_seen_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last seen at"
                    ),
                ),
                (
                    "whatsapp_instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="whatsapp.whatsappinstance",
                        verbose_name="WhatsApp Instance",
                    ),
                ),
            ],
            options={
                "verbose_name": "WhatsApp Contact",
                "verbose_name_plural": "WhatsApp Contacts",
                "unique_together": {("whatsapp_instance", "phone_number")},
            },
        ),
    ]
